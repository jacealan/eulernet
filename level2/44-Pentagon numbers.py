#!/usr/local/bin/python3
'''
Problem 44 : Pentagon numbers
Pentagonal numbers are generated by the formula, Pn=n(3n−1)/2.
The first ten pentagonal numbers are:
1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...
It can be seen that P4 + P7 = 22 + 70 = 92 = P8.
However, their difference, 70 − 22 = 48, is not pentagonal.
Find the pair of pentagonal numbers, Pj and Pk,
for which their sum and difference are pentagonal and D = |Pk − Pj| is minimised;
what is the value of D?
https://projecteuler.net/problem=44
---
프로그래머 Programmer : 제이스 Jace (https://jacealan.github.io)
사용언어 Language : 파이썬 Python 3.6.4
OS : macOS High Sierra 10.13.3
에디터 Editor : Visual Studio Code
'''


def pentagon(n):
    return n * (3 * n - 1) // 2


# def solution():
#     pentagonlist = [pentagon(x) for x in range(1, 10000)]
#     print('start')

#     for i in range(2, 10):
#         for j in range(i - 1, -1, -1):
#             print(i, j)


def solution2():
    pentagonlist = [pentagon(x) for x in range(1, 10000)]
    print('start')

    limit = 1
    pentagons = [pentagon(limit)]

    find = False
    while not find:
        limit += 1
        pentagons.insert(0, pentagon(limit))
        # print(len(pentagons), pentagons)
        # if limit % 1000 == 0:
        print(limit, pentagons[0])

        for i in range(1, limit):
            if pentagons[0] + pentagons[i] in pentagonlist:
                print('pentagons sum', i + 1,
                      pentagons[i], limit, pentagons[0], '+>', pentagons[0] + pentagons[i])
            if pentagons[0] - pentagons[i] in pentagons:
                print('pentagons minus', i + 1,
                      pentagons[i], limit, pentagons[0], '->', pentagons[0] - pentagons[i])
            if pentagons[0] + pentagons[i] in pentagonlist and pentagons[0] - pentagons[i] in pentagons:
                print('pentagons pentagons pentagons', i + 1,
                      pentagons[i], limit, pentagons[0], '->', pentagons[0] - pentagons[i])
                find = True
                break


def solution1():
    limit = 10000
    pentagons = [pentagon(i) for i in range(1, limit + 1)]
    # print(pentagons)

    for i in range(limit):
        for j in range(i + 1, limit):
            # print(i + 1, pentagons[i], j + 1, pentagons[j])
            if pentagons[j] + pentagons[i] in pentagons and pentagons[j] - pentagons[i] in pentagons:
                print('pentagons', i + 1, pentagons[i], j + 1, pentagons[j])
                break


if __name__ == '__main__':
    solution2()

# pentagons pentagons pentagons 1148 1560090 2167 7042750 -> 5482660
